// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	customercore "bankku/domains/customer/core"

	mock "github.com/stretchr/testify/mock"
)

// CustomerRepo is an autogenerated mock type for the IRepoCustomer type
type CustomerRepo struct {
	mock.Mock
}

// FindUser provides a mock function with given fields: customerCore
func (_m *CustomerRepo) FindUser(customerCore customercore.Core) (customercore.Core, error) {
	ret := _m.Called(customerCore)

	var r0 customercore.Core
	if rf, ok := ret.Get(0).(func(customercore.Core) customercore.Core); ok {
		r0 = rf(customerCore)
	} else {
		r0 = ret.Get(0).(customercore.Core)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(customercore.Core) error); ok {
		r1 = rf(customerCore)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateSaldo provides a mock function with given fields: customerCore
func (_m *CustomerRepo) UpdateSaldo(customerCore customercore.Core) error {
	ret := _m.Called(customerCore)

	var r0 error
	if rf, ok := ret.Get(0).(func(customercore.Core) error); ok {
		r0 = rf(customerCore)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewCustomerRepo interface {
	mock.TestingT
	Cleanup(func())
}

// NewCustomerRepo creates a new instance of CustomerRepo. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewCustomerRepo(t mockConstructorTestingTNewCustomerRepo) *CustomerRepo {
	mock := &CustomerRepo{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
